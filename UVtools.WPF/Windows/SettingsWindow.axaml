<controls:WindowEx xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="clr-namespace:UVtools.WPF.Controls"
        mc:Ignorable="d" d:DesignWidth="700" d:DesignHeight="450"
        x:Class="UVtools.WPF.Windows.SettingsWindow"
        WindowStartupLocation="Manual"
        MinWidth="600"
        Width="780"
        SizeToContent="Height"
        CanResize="False"
        Title="UVtools - Settings"
        Icon="/Assets/Icons/UVtools.ico">
  <Grid RowDefinitions="*,84">
    <TabControl SelectedIndex="{Binding SelectedTabIndex}">
      <TabItem Header="General" VerticalContentAlignment="Center">
        <ScrollViewer Name="ScrollViewer0">
          <StackPanel Orientation="Vertical" Spacing="5">
            <Border
                Classes="GroupBox"
              Margin="5">

              <StackPanel Orientation="Vertical">
                <TextBlock Padding="10" Background="LightBlue" FontWeight="Bold" Text="Startup"/>
                <StackPanel Margin="10" Orientation="Vertical" Spacing="10">
                  <CheckBox IsChecked="{Binding Settings.General.StartMaximized}" Content="Start maximized"/>
                  <CheckBox IsChecked="{Binding Settings.General.CheckForUpdatesOnStartup}" Content="Check for updates on startup"/>
                  <CheckBox IsChecked="{Binding Settings.General.LoadDemoFileOnStartup}" Content="Loads a demo file on startup if no file was specified"/>
                  <CheckBox IsChecked="{Binding Settings.General.LoadLastRecentFileOnStartup}" Content="Loads the last recent file on startup if no file was specified"/>
                </StackPanel>

              </StackPanel>
            </Border>

              <Border
                  Classes="GroupBox"
                  Margin="5">

                  <StackPanel Orientation="Vertical">
                      <TextBlock Padding="10" Background="LightBlue" FontWeight="Bold" Text="Tasks"/>
                      <StackPanel Margin="10" Orientation="Vertical" Spacing="10">
                        <Grid RowDefinitions="Auto"
                              ColumnDefinitions="Auto,10,150,5,Auto,20,Auto,2,Auto,2,Auto,2,Auto,2,Auto,2,Auto,2,Auto">

                          <TextBlock Grid.Row="0" Grid.Column="0"
                                     VerticalAlignment="Center"
                                     ToolTip.Tip="Sets the maximum number of concurrent tasks/threads/operations enabled to run by parallel method calls.
&#x0a;If your computer lags and freeze during operations you can reduce this number to reduce the workload and keep some cores available to other tasks as well.
&#x0a;&lt;= 0: Will utilize however many threads the underlying scheduler provides, mostly this is the processor core count.
&#x0a;1: Single thread."
                                     Text="Max degree of parallelism:"/>

                          <NumericUpDown Grid.Row="0" Grid.Column="2"
                                     VerticalAlignment="Center"
                                     ToolTip.Tip="Sets the maximum number of concurrent tasks/threads/operations enabled to run by parallel method calls.
&#x0a;If your computer lags and freeze during operations you can reduce this number to reduce the workload and keep some cores available to other tasks as well.
&#x0a;&lt;= 0: Will utilize however many threads the underlying scheduler provides, mostly this is the processor core count.
&#x0a;1: Single thread."
                                     Minimum="-1"
                                     Maximum="{Binding MaxProcessorCount}"
                                     Increment="1"
                                     Value="{Binding Settings.General.MaxDegreeOfParallelism}"/>
                          <TextBlock Grid.Row="0" Grid.Column="4"
                                     VerticalAlignment="Center"
                                     Text="{Binding MaxProcessorCount, StringFormat=/ {0} threads}"/>

                          <Button Grid.Row="0" Grid.Column="6"
                                  VerticalAlignment="Center"
                                  Content="Auto"
                                  ToolTip.Tip="Will utilize however many threads the underlying scheduler provides (Full performance)"
                                  Command="{Binding SetMaxDegreeOfParallelism}"
                                  CommandParameter="-1"/>

                          <Button Grid.Row="0" Grid.Column="8"
                                  VerticalAlignment="Center"
                                  Content="1"
                                  ToolTip.Tip="Single thread (Very slow performance)"
                                  Command="{Binding SetMaxDegreeOfParallelism}"
                                  CommandParameter="1"/>

                          <Button Grid.Row="0" Grid.Column="10"
                                  VerticalAlignment="Center"
                                  Content="¼"
                                  ToolTip.Tip="A quarter of the available threads (Slow performance)"
                                  Command="{Binding SetMaxDegreeOfParallelism}"
                                  CommandParameter="0.25"/>

                          <Button Grid.Row="0" Grid.Column="12"
                                  VerticalAlignment="Center"
                                  Content="½"
                                  ToolTip.Tip="Half of the available threads (Half performance)"
                                  Command="{Binding SetMaxDegreeOfParallelism}"
                                  CommandParameter="0.5"/>

                          <Button Grid.Row="0" Grid.Column="14"
                                  VerticalAlignment="Center"
                                  Content="¾"
                                  ToolTip.Tip="Three quarters of the available threads (Fast performance)"
                                  Command="{Binding SetMaxDegreeOfParallelism}"
                                  CommandParameter="0.75"/>

                          <Button Grid.Row="0" Grid.Column="16"
                                  VerticalAlignment="Center"
                                  Content="!"
                                  ToolTip.Tip="Optimal of the available threads, this is your thread count less 2 to relief the workload and leave 2 cores free for other running tasks (Optimal performance)"
                                  Command="{Binding SetMaxDegreeOfParallelism}"
                                  CommandParameter="!"/>

                          <Button Grid.Row="0" Grid.Column="18"
                                  VerticalAlignment="Center"
                                  Content="Max"
                                  ToolTip.Tip="{Binding MaxProcessorCount, StringFormat=All of the available threads [{0}] (Full performance)}"
                                  Command="{Binding SetMaxDegreeOfParallelism}"
                                  CommandParameter="{Binding MaxProcessorCount}"/>
                          
                        </Grid>
                      </StackPanel>

                  </StackPanel>
              </Border>

            <Border
                Classes="GroupBox"
                  Margin="5">

                  <StackPanel Orientation="Vertical">
                      <TextBlock Padding="10" Background="LightBlue" FontWeight="Bold" Text="Windows / dialogs"/>
                      <StackPanel Margin="10" Orientation="Vertical" Spacing="10">

                          <CheckBox IsChecked="{Binding Settings.General.WindowsCanResize}"
                                    ToolTip.Tip="Check this option if you have problems with content being cut on some windows, down-size the height by a bit and then expand to fix the content."
                                    Content="Allow to resize the tool windows"/>

                          <CheckBox IsChecked="{Binding Settings.General.WindowsTakeIntoAccountScreenScaling}"
                                    Content="Take into account the screen scale factor to limit the dialogs windows maximum size"/>


                          <Grid RowDefinitions="Auto,10,Auto"
                                ColumnDefinitions="Auto,10,Auto">

                              <TextBlock Grid.Row="0" Grid.Column="0" 
                                         VerticalAlignment="Center"
                                         ToolTip.Tip="Limits the windows and dialogs maximum width to the screen resolution less this margin"
                                         Text="Horizontal limiting margin:"/>

                            <NumericUpDown Grid.Row="0" Grid.Column="2"
                                           Classes="ValueLabel ValueLabel_px"
                                       VerticalAlignment="Center"
                                       ToolTip.Tip="Limits the windows and dialogs maximum width to the screen resolution less this margin"
                                       Minimum="0"
                                       Maximum="1000"
                                       Increment="1"
                                       Value="{Binding Settings.General.WindowsHorizontalMargin}"/>

                              <TextBlock Grid.Row="2" Grid.Column="0"
                                         VerticalAlignment="Center"
                                         ToolTip.Tip="Limits windows and dialogs maximum height to the screen resolution less this margin"
                                         Text="Vertical limiting margin:"/>

                              <NumericUpDown Grid.Row="2" Grid.Column="2"
                                             Classes="ValueLabel ValueLabel_px"
                                             VerticalAlignment="Center"
                                             ToolTip.Tip="Limits windows and dialogs maximum height to the screen resolution less this margin"
                                             Minimum="0"
                                             Maximum="1000"
                                             Increment="1"
                                             Value="{Binding Settings.General.WindowsVerticalMargin}"/>
                          </Grid>

                          <CheckBox IsChecked="{Binding Settings.General.ExpandDescriptions}"
                                    ToolTip.Tip="Disable this if you want to gain some vertical space for windows, you can still toggle the descriptions and read them if required."
                                    Content="Expand and show tool descriptions by default"/>
                      </StackPanel>

                  </StackPanel>
              </Border>

            <Border
                Classes="GroupBox"
              Margin="5">

              <StackPanel Orientation="Vertical">
                <TextBlock Padding="10" Background="LightBlue" FontWeight="Bold" Text="File dialog"/>
                <Grid Margin="10" 
                      RowDefinitions="Auto,10,Auto,10,Auto,10,Auto,10,Auto,10,Auto" 
                      ColumnDefinitions="Auto,10,449,Auto,Auto">
                  <TextBlock
                    VerticalAlignment="Center"
                    Grid.Row="0" Grid.Column="0"
                    Text="File open dialog filters:"/>
                  <ComboBox Items="{Binding FileOpenDialogFilters}"
                            SelectedIndex="{Binding Settings.General.DefaultOpenFileExtensionIndex}"
                            HorizontalAlignment="Left"
                            Width="517"
                            MaxDropDownHeight="350"
                            Grid.ColumnSpan="3" Grid.Row="0" Grid.Column="2"/>

                  <TextBlock VerticalAlignment="Center"
                             Grid.Row="2" Grid.Column="0"
                             Text="File open default directory:"/>
                  <TextBox
                    Name="General.DefaultDirectoryOpenFile"
                    Text="{Binding Settings.General.DefaultDirectoryOpenFile}"
                    Grid.Row="2" Grid.Column="2" IsReadOnly="True"/>
                  <Button Grid.Row="2" Grid.Column="3"
                          VerticalAlignment="Stretch"
                          HorizontalAlignment="Stretch"
                          Command="{Binding GeneralOpenFolderField}"
                          CommandParameter="DefaultDirectoryOpenFile">
                    <Image Source="/Assets/Icons/open-16x16.png"/>
                  </Button>
                  <Button Grid.Row="2" Grid.Column="4"
                          VerticalAlignment="Stretch"
                          HorizontalAlignment="Stretch"
                          Command="{Binding GeneralClearField}"
                          CommandParameter="DefaultDirectoryOpenFile">
                    <Image Source="/Assets/Icons/delete-16x16.png"/>
                  </Button>

                  <TextBlock VerticalAlignment="Center"
                             Grid.Row="4" Grid.Column="0"
                             Text="File save as default directory:"/>
                  <TextBox
                    Name="General.DefaultDirectorySaveFile"
                    Text="{Binding Settings.General.DefaultDirectorySaveFile}"
                    Grid.Row="4" Grid.Column="2" IsReadOnly="True"/>
                  <Button Grid.Row="4" Grid.Column="3"
                          VerticalAlignment="Stretch"
                          HorizontalAlignment="Stretch"
                          Command="{Binding GeneralOpenFolderField}"
                          CommandParameter="DefaultDirectorySaveFile">
                    <Image Source="/Assets/Icons/open-16x16.png"/>
                  </Button>
                  <Button Grid.Row="4" Grid.Column="4"
                          VerticalAlignment="Stretch"
                          HorizontalAlignment="Stretch"
                          Command="{Binding GeneralClearField}"
                          CommandParameter="DefaultDirectorySaveFile">
                    <Image Source="/Assets/Icons/delete-16x16.png"/>
                  </Button>

                  <TextBlock VerticalAlignment="Center"
                             Grid.Row="6" Grid.Column="0"
                             Text="File extract default directory:"/>
                  <TextBox
                    Name="General.DefaultDirectoryExtractFile"
                    Text="{Binding Settings.General.DefaultDirectoryExtractFile}"
                    Grid.Row="6" Grid.Column="2" IsReadOnly="True"/>
                  <Button Grid.Row="6" Grid.Column="3"
                          VerticalAlignment="Stretch"
                          HorizontalAlignment="Stretch"
                          Command="{Binding GeneralOpenFolderField}"
                          CommandParameter="DefaultDirectoryExtractFile">
                    <Image Source="/Assets/Icons/open-16x16.png"/>
                  </Button>
                  <Button Grid.Row="6" Grid.Column="4"
                          VerticalAlignment="Stretch"
                          HorizontalAlignment="Stretch"
                          Command="{Binding GeneralClearField}"
                          CommandParameter="DefaultDirectoryExtractFile">
                    <Image Source="/Assets/Icons/delete-16x16.png"/>
                  </Button>

                  <TextBlock VerticalAlignment="Center"
                             Grid.Row="8" Grid.Column="0"
                             Text="File convert default directory:"/>
                  <TextBox
                    Name="General.DefaultDirectoryConvertFile"
                    Text="{Binding Settings.General.DefaultDirectoryConvertFile}"
                    Grid.Row="8" Grid.Column="2" IsReadOnly="True"/>
                  <Button Grid.Row="8" Grid.Column="3"
                          VerticalAlignment="Stretch"
                          HorizontalAlignment="Stretch"
                          Command="{Binding GeneralOpenFolderField}"
                          CommandParameter="DefaultDirectoryConvertFile">
                    <Image Source="/Assets/Icons/open-16x16.png"/>
                  </Button>
                  <Button
                    Command="{Binding GeneralClearField}"
                    CommandParameter="DefaultDirectoryConvertFile"
                    VerticalAlignment="Stretch"
                    HorizontalAlignment="Stretch"
                    Grid.Row="8" Grid.Column="4">
                    <Image Source="/Assets/Icons/delete-16x16.png"/>
                  </Button>

                  <TextBlock VerticalAlignment="Center"
                             Grid.Row="10" Grid.Column="0"
                             Text="Scripts default directory:"/>
                  <TextBox
                      Name="General.DefaultDirectoryScripts"
                      Text="{Binding Settings.General.DefaultDirectoryScripts}"
                      Grid.Row="10" Grid.Column="2" IsReadOnly="True"/>
                  <Button Grid.Row="10" Grid.Column="3"
                          VerticalAlignment="Stretch"
                          HorizontalAlignment="Stretch"
                          Command="{Binding GeneralOpenFolderField}"
                          CommandParameter="DefaultDirectoryScripts">
                      <Image Source="/Assets/Icons/open-16x16.png"/>
                  </Button>
                  <Button
                      Command="{Binding GeneralClearField}"
                      CommandParameter="DefaultDirectoryScripts"
                      VerticalAlignment="Stretch"
                      HorizontalAlignment="Stretch"
                      Grid.Row="10" Grid.Column="4">
                      <Image Source="/Assets/Icons/delete-16x16.png"/>
                  </Button>

                </Grid>
                <CheckBox IsChecked="{Binding Settings.General.PromptOverwriteFileSave}" Margin="10,0" Content="On file 'Save' prompt for file overwrite for the first time" />

                <Grid Margin="10" ColumnDefinitions="Auto,*,Auto,*">
                  <TextBlock VerticalAlignment="Center" Grid.Column="0" Text="File 'Save as' prefix:"/>
                  <TextBox Text="{Binding Settings.General.FileSaveNamePrefix}"
                           Grid.Column="1" Margin="10,0,10,0"/>
                  <TextBlock VerticalAlignment="Center" Grid.Column="2" Text="Suffix:"/>
                  <TextBox Text="{Binding Settings.General.FileSaveNameSuffix}"
                           Grid.Column="3" Margin="10,0,0,0"/>
                </Grid>
              </StackPanel>


            </Border>

            <Border
                Classes="GroupBox"
                Margin="5">

              <StackPanel Orientation="Vertical">
                  <Grid RowDefinitions="Auto" ColumnDefinitions="*,Auto"  Background="LightBlue">
                    <TextBlock Grid.Row="0" Grid.Column="0"
                               VerticalAlignment="Center"
                               Padding="10" FontWeight="Bold" Text="Send to - Custom locations"/>

                    <StackPanel Grid.Row="0" Grid.Column="1"  
                                HorizontalAlignment="Right" Orientation="Horizontal" Spacing="2">
                        <Button ToolTip.Tip="Add location" VerticalAlignment="Center"
                                Command="{Binding SendToAddCustomLocation}">
                            <Image Source="/Assets/Icons/plus-16x16.png"/>
                        </Button>

                        <Button ToolTip.Tip="Remove selected locations" VerticalAlignment="Center"
                                IsEnabled="{Binding #SendToCustomLocationsGrid.SelectedItem, Converter={x:Static ObjectConverters.IsNotNull}}"
                                Command="{Binding SendToRemoveCustomLocations}">
                            <Image Source="/Assets/Icons/trash-16x16.png"/>
                        </Button>
                    </StackPanel>

                  </Grid>

                  <StackPanel Margin="10" Orientation="Vertical" Spacing="10">
                    <DataGrid
                        Name="SendToCustomLocationsGrid"
                        CanUserReorderColumns="True"
                        CanUserResizeColumns="True"
                        CanUserSortColumns="True"
                        GridLinesVisibility="Horizontal"
                        IsReadOnly="False"
                        SelectionMode="Extended"
                        ClipboardCopyMode="IncludeHeader"
                        Items="{Binding Settings.General.SendToCustomLocations}">
                        <DataGrid.Columns>
                            <DataGridCheckBoxColumn  Header="Enabled"
                                                    Binding="{Binding IsEnabled}"
                                                    IsReadOnly="False"
                                                    Width="Auto" />
                            <DataGridTextColumn  Header="Path"
                                                 Binding="{Binding Path}"
                                                 IsReadOnly="True"
                                                 Width="*" />
                            <DataGridTextColumn Header="Alias name"
                                                Binding="{Binding Name}"
                                                IsReadOnly="False"
                                                Width="200" />
                            <DataGridTextColumn Header="Extensions"
                                                Binding="{Binding CompatibleExtensions}"
                                                IsReadOnly="False"
                                                Width="150" />
                        </DataGrid.Columns>

                    </DataGrid>
                </StackPanel>

              </StackPanel>
            </Border>

          </StackPanel>
        </ScrollViewer>

      </TabItem>
      <TabItem Header="Layer preview" VerticalContentAlignment="Center">
        <ScrollViewer Name="ScrollViewer1">
          <StackPanel Orientation="Vertical" Spacing="5">
            <Border
                Classes="GroupBox"
                Margin="5">

              <StackPanel Orientation="Vertical">
                <TextBlock Padding="10" Background="LightBlue" FontWeight="Bold" Text="Layer colors"/>

                <Grid Margin="10" RowDefinitions="Auto,10,Auto,10,Auto,10,Auto,10,Auto,10,Auto,10,Auto" ColumnDefinitions="Auto,Auto,Auto,Auto,*">

                  <!--Tooltip overlay-->
                  <TextBlock Grid.Row="0" Grid.Column="0"
                             VerticalAlignment="Center"
                             Text="Tooltip overlay:"/>
                  <Button Grid.Row="0" Grid.Column="1"
                          Margin="10,0,0,0"
                          Padding="10"
                          BorderBrush="Black"
                          BorderThickness="2"
                           VerticalAlignment="Center"
                          Background="{Binding Settings.LayerPreview.TooltipOverlayBackgroundBrush}"
                          Command="{Binding SelectColor}"
                          CommandParameter="TooltipOverlayBackgroundColor"
                        />
                  <CheckBox Grid.Row="0" Grid.Column="4"
                            Margin="10,0,0,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Content="Show by default"
                            IsChecked="{Binding Settings.LayerPreview.TooltipOverlay}"
                          />


                  <!--Print volume boundary-->
                  <TextBlock Grid.Row="2" Grid.Column="0"
                             VerticalAlignment="Center"
                             Text="Print volume boundary:"/>

                  <Button Grid.Row="2" Grid.Column="1"
                          Margin="10,0,0,0"
                          Padding="10"
                          BorderBrush="Black"
                          BorderThickness="2"
                           VerticalAlignment="Center"
                          Background="{Binding Settings.LayerPreview.VolumeBoundsOutlineBrush}"
                          Command="{Binding SelectColor}"
                          CommandParameter="VolumeBoundsOutlineColor"
                        />
                  <NumericUpDown Grid.Row="2" Grid.Column="2"
                                 Margin="10,0,0,0"
                                 VerticalAlignment="Center"
                                 
                                 Minimum="1"
                                 Maximum="50"
                                 Value="{Binding Settings.LayerPreview.VolumeBoundsOutlineThickness}"
                               />
                  <TextBlock Grid.Row="2" Grid.Column="3"
                             Margin="5,0,0,0"
                             VerticalAlignment="Center"
                             Text="Line thickness"/>
                  <CheckBox Grid.Row="2" Grid.Column="4"
                            Margin="10,0,0,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Content="Show by default"
                            IsChecked="{Binding Settings.LayerPreview.VolumeBoundsOutline}"
                          />

                  <!--Layer boundary-->
                  <TextBlock Grid.Row="4" Grid.Column="0"
                             VerticalAlignment="Center"
                             Text="Layer boundary:"/>
                  <Button Grid.Row="4" Grid.Column="1"
                          Margin="10,0,0,0"
                          Padding="10"
                          BorderBrush="Black"
                          BorderThickness="2"
                           VerticalAlignment="Center"
                          Background="{Binding Settings.LayerPreview.LayerBoundsOutlineBrush}"
                          Command="{Binding SelectColor}"
                          CommandParameter="LayerBoundsOutlineColor"/>
                  <NumericUpDown Grid.Row="4" Grid.Column="2"
                                 Margin="10,0,0,0"
                                 VerticalAlignment="Center"
                                 
                                 Minimum="1"
                                 Maximum="50"
                                 Value="{Binding Settings.LayerPreview.LayerBoundsOutlineThickness}"/>
                  <TextBlock Grid.Row="4" Grid.Column="3"
                             Margin="5,0,0,0"
                             VerticalAlignment="Center"
                             Text="Line thickness"/>
                  <CheckBox Grid.Row="4" Grid.Column="4"
                            Margin="10,0,0,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Content="Show by default"
                            IsChecked="{Binding Settings.LayerPreview.LayerBoundsOutline}"/>

                  <!--Blob boundary-->
                  <TextBlock Grid.Row="6" Grid.Column="0"
                             VerticalAlignment="Center"
                             Text="Blob boundary:"/>
                  <Button Grid.Row="6" Grid.Column="1"
                          Margin="10,0,0,0"
                          Padding="10"
                          BorderBrush="Black"
                          BorderThickness="2"
                          VerticalAlignment="Center"
                          Background="{Binding Settings.LayerPreview.ContourBoundsOutlineBrush}"
                          Command="{Binding SelectColor}"
                          CommandParameter="LayerBoundsOutlineColor"/>
                  <NumericUpDown Grid.Row="6" Grid.Column="2"
                                 Margin="10,0,0,0"
                                 VerticalAlignment="Center"
                                 Minimum="1"
                                 Maximum="50"
                                 Value="{Binding Settings.LayerPreview.ContourBoundsOutlineThickness}"/>
                  <TextBlock Grid.Row="6" Grid.Column="3"
                             Margin="5,0,0,0"
                             VerticalAlignment="Center"
                             Text="Line thickness"/>
                  <CheckBox Grid.Row="6" Grid.Column="4"
                            Margin="10,0,0,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Content="Show by default"
                            IsChecked="{Binding Settings.LayerPreview.ContourBoundsOutline}"/>


                  <!--Hallow area boundary-->
                  <TextBlock Grid.Row="8" Grid.Column="0"
                             VerticalAlignment="Center"
                             Text="Hollow area outline:"/>
                  <Button Grid.Row="8" Grid.Column="1"
                          Margin="10,0,0,0"
                          Padding="10"
                          BorderBrush="Black"
                          BorderThickness="2"
                           VerticalAlignment="Center"
                          Background="{Binding Settings.LayerPreview.HollowOutlineBrush}"
                          Command="{Binding SelectColor}"
                          CommandParameter="HollowOutlineColor"/>
                  <NumericUpDown Grid.Row="8" Grid.Column="2"
                                 Margin="10,0,0,0"
                                 VerticalAlignment="Center"
                                 Minimum="-1"
                                 Maximum="127"
                                 Value="{Binding Settings.LayerPreview.HollowOutlineLineThickness}"/>
                  <TextBlock Grid.Row="8" Grid.Column="3"
                             Margin="5,0,0,0"
                             VerticalAlignment="Center"
                             ToolTip.Tip="Set -1 to fill the area"
                             Text="Line thickness"/>
                  <CheckBox Grid.Row="8" Grid.Column="4"
                            Margin="10,0,0,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Content="Show by default"
                            IsChecked="{Binding Settings.LayerPreview.HollowOutline}"/>

                  <!--Blob boundary-->
                  <TextBlock Grid.Row="10" Grid.Column="0"
                             VerticalAlignment="Center"
                             Text="Centroids:"/>
                  <Button Grid.Row="10" Grid.Column="1"
                          Margin="10,0,0,0"
                          Padding="10"
                          BorderBrush="Black"
                          BorderThickness="2"
                          VerticalAlignment="Center"
                          Background="{Binding Settings.LayerPreview.CentroidOutlineBrush}"
                          Command="{Binding SelectColor}"
                          CommandParameter="LayerBoundsOutlineColor"/>
                  <NumericUpDown Grid.Row="10" Grid.Column="2"
                                 Margin="10,0,0,0"
                                 VerticalAlignment="Center"
                                 Minimum="1"
                                 Maximum="50"
                                 Value="{Binding Settings.LayerPreview.CentroidOutlineDiameter}"/>
                  <TextBlock Grid.Row="10" Grid.Column="3"
                             Margin="5,0,0,0"
                             VerticalAlignment="Center"
                             Text="Diameter"/>

                  <StackPanel 
                      HorizontalAlignment="Right"
                      VerticalAlignment="Center"
                      Grid.Row="10" Grid.Column="3" Grid.ColumnSpan="2" Orientation="Horizontal" Spacing="10">
                      <CheckBox Content="Hollow centroids"
                                IsChecked="{Binding Settings.LayerPreview.CentroidOutlineHollow}"/>

                      <CheckBox Content="Show by default"
                                IsChecked="{Binding Settings.LayerPreview.CentroidOutline}"/>
                  </StackPanel>


                  <!--Masks-->
                  <TextBlock Grid.Row="12" Grid.Column="0"
                             VerticalAlignment="Center"
                             Text="Mask area outline:"/>
                  <Button Grid.Row="12" Grid.Column="1"
                          Margin="10,0,0,0"
                          Padding="10"
                          BorderBrush="Black"
                          BorderThickness="2"
                          VerticalAlignment="Center"
                          Background="{Binding Settings.LayerPreview.MaskOutlineBrush}"
                          Command="{Binding SelectColor}"
                          CommandParameter="MaskOutlineColor"/>
                  <NumericUpDown Grid.Row="12" Grid.Column="2"
                                 Margin="10,0,0,0"
                                 VerticalAlignment="Center"
                                 Minimum="-1"
                                 Maximum="127"
                                 Value="{Binding Settings.LayerPreview.MaskOutlineLineThickness}"/>
                  <TextBlock Grid.Row="12" Grid.Column="3"
                             Margin="5,0,0,0"
                             VerticalAlignment="Center"
                             ToolTip.Tip="Set -1 to fill the area"
                             Text="Line thickness"/>
                  <CheckBox Grid.Row="12" Grid.Column="4"
                            Margin="10,0,0,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Content="Clear ROI when adding masks"
                            IsChecked="{Binding Settings.LayerPreview.MaskClearROIAfterSet}"/>

                </Grid>

                <Grid Margin="10,0,10,10" 
                      RowDefinitions="Auto,10,Auto,10,Auto,10,Auto,10,Auto,10,Auto" 
                      ColumnDefinitions="Auto,Auto,*,Auto,Auto">

                  <!--Previous layer difference  & Island-->
                  <TextBlock Grid.Row="0" Grid.Column="0"
                             VerticalAlignment="Center"
                             Text="Previous layer difference:"/>
                  <Button Grid.Row="0" Grid.Column="1"
                          Margin="10,0,0,0"
                          Padding="10"
                          BorderBrush="Black"
                          BorderThickness="2"
                           VerticalAlignment="Center"
                          Background="{Binding Settings.LayerPreview.PreviousLayerDifferenceBrush}"
                          Command="{Binding SelectColor}"
                          CommandParameter="PreviousLayerDifferenceColor"/>
                  <TextBlock Grid.Row="0" Grid.Column="2"
                            Margin="10,0,0,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Text="Island / Selected island:"/>
                  <Button Grid.Row="0" Grid.Column="3"
                          Margin="10,0,0,0"
                          Padding="10"
                          BorderBrush="Black"
                          BorderThickness="2"
                           VerticalAlignment="Center"
                          Background="{Binding Settings.LayerPreview.IslandBrush}"
                          Command="{Binding SelectColor}"
                          CommandParameter="IslandColor"/>
                  <Button Grid.Row="0" Grid.Column="4"
                          Margin="10,0,0,0"
                          Padding="10"
                          BorderBrush="Black"
                          BorderThickness="2"
                           VerticalAlignment="Center"
                          Background="{Binding Settings.LayerPreview.IslandHighlightBrush}"
                          Command="{Binding SelectColor}"
                          CommandParameter="IslandHighlightColor"/>

                  <!--Next layer difference  & Overhang-->
                  <TextBlock Grid.Row="2" Grid.Column="0"
                             VerticalAlignment="Center"
                             Text="Next layer difference:"/>
                  <Button Grid.Row="2" Grid.Column="1"
                          Margin="10,0,0,0"
                          Padding="10"
                          BorderBrush="Black"
                          BorderThickness="2"
                           VerticalAlignment="Center"
                          Background="{Binding Settings.LayerPreview.NextLayerDifferenceBrush}"
                          Command="{Binding SelectColor}"
                          CommandParameter="NextLayerDifferenceColor"/>

                  <TextBlock Grid.Row="2" Grid.Column="2"
                            Margin="10,0,0,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Text="Overhang / Selected overhang:"/>
                  <Button Grid.Row="2" Grid.Column="3"
                          Margin="10,0,0,0"
                          Padding="10"
                          BorderBrush="Black"
                          BorderThickness="2"
                           VerticalAlignment="Center"
                          Background="{Binding Settings.LayerPreview.OverhangBrush}"
                          Command="{Binding SelectColor}"
                          CommandParameter="OverhangColor"/>
                  <Button Grid.Row="2" Grid.Column="4"
                          Margin="10,0,0,0"
                          Padding="10"
                          BorderBrush="Black"
                          BorderThickness="2"
                           VerticalAlignment="Center"
                          Background="{Binding Settings.LayerPreview.OverhangHighlightBrush}"
                          Command="{Binding SelectColor}"
                          CommandParameter="OverhangHighlightColor"
                        />

                  <!--Next&prev layer difference & Resin traps-->
                  <TextBlock Grid.Row="4" Grid.Column="0"
                             VerticalAlignment="Center"
                             Text="Prev &amp; next layer difference:"/>
                  <Button Grid.Row="4" Grid.Column="1"
                          Margin="10,0,0,0"
                          Padding="10"
                          BorderBrush="Black"
                          BorderThickness="2"
                           VerticalAlignment="Center"
                          Background="{Binding Settings.LayerPreview.BothLayerDifferenceBrush}"
                          Command="{Binding SelectColor}"
                          CommandParameter="BothLayerDifferenceColor"/>

                  <TextBlock Grid.Row="4" Grid.Column="2"
                            Margin="10,0,0,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Text="Resin trap / Selected Resin trap:"/>
                  <Button Grid.Row="4" Grid.Column="3"
                          Margin="10,0,0,0"
                          Padding="10"
                          BorderBrush="Black"
                          BorderThickness="2"
                           VerticalAlignment="Center"
                          Background="{Binding Settings.LayerPreview.ResinTrapBrush}"
                          Command="{Binding SelectColor}"
                          CommandParameter="ResinTrapColor"/>
                  <Button Grid.Row="4" Grid.Column="4"
                          Margin="10,0,0,0"
                          Padding="10"
                          BorderBrush="Black"
                          BorderThickness="2"
                          VerticalAlignment="Center"
                          Background="{Binding Settings.LayerPreview.ResinTrapHighlightBrush}"
                          Command="{Binding SelectColor}"
                          CommandParameter="ResinTrapHighlightColor"/>

                  <!--Diff & suction cups-->
                  <CheckBox Grid.Row="6" Grid.Column="0"
                            Grid.ColumnSpan="3"
                            Content="Show layer difference by default"
                            IsChecked="{Binding Settings.LayerPreview.ShowLayerDifference}"/>

                  <TextBlock Grid.Row="6" Grid.Column="2"
                             Margin="10,0,0,0"
                             HorizontalAlignment="Right"
                             VerticalAlignment="Center"
                             Text="Suction cup / Selected Suction cup:"/>
                  <Button Grid.Row="6" Grid.Column="3"
                          Margin="10,0,0,0"
                          Padding="10"
                          BorderBrush="Black"
                          BorderThickness="2"
                          VerticalAlignment="Center"
                          Background="{Binding Settings.LayerPreview.SuctionCupBrush}"
                          Command="{Binding SelectColor}"
                          CommandParameter="SuctionCupColor"/>
                  <Button Grid.Row="6" Grid.Column="4"
                          Margin="10,0,0,0"
                          Padding="10"
                          BorderBrush="Black"
                          BorderThickness="2"
                          VerticalAlignment="Center"
                          Background="{Binding Settings.LayerPreview.SuctionCupHighlightBrush}"
                          Command="{Binding SelectColor}"
                          CommandParameter="SuctionCupHighlightColor"/>


                  <!--Diff & Touching bounds-->

                  <CheckBox Grid.Row="8" Grid.Column="0"
                            Grid.ColumnSpan="3"
                            Content="Show layer similarity instead of difference"
                            ToolTip.Tip="If enabled, it will recolor the current layer pixels in common with the previous and next layer"
                            IsChecked="{Binding Settings.LayerPreview.LayerDifferenceHighlightSimilarityInstead}"/>

                  <TextBlock Grid.Row="8" Grid.Column="2"
                            Margin="10,0,0,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Text="Touching boundary:"/>
                  <Button Grid.Row="8" Grid.Column="3"
                          Margin="10,0,0,0"
                          Padding="10"
                          BorderBrush="Black"
                          BorderThickness="2"
                           VerticalAlignment="Center"
                          Background="{Binding Settings.LayerPreview.TouchingBoundsBrush}"
                          Command="{Binding SelectColor}"
                          CommandParameter="TouchingBoundsColor"/>


                  <!-- Crosshair -->
                  <CheckBox Grid.Row="10" Grid.Column="0"
                            Grid.ColumnSpan="3"
                            Content="Colorize the issue tracker map with it own colors"
                            ToolTip.Tip="Issue color priority: Islands->Overhangs->Resin traps->Suction cups.
&#x0a;If disabled, red will be used to display each layer issue."
                            IsChecked="{Binding Settings.LayerPreview.UseIssueColorOnTracker}"/>
                  <TextBlock Grid.Row="10" Grid.Column="2"
                            Margin="10,0,0,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Text="Crosshair:"/>
                  <Button Grid.Row="10" Grid.Column="3"
                          Margin="10,0,0,0"
                          Padding="10"
                          BorderBrush="Black"
                          BorderThickness="2"
                          VerticalAlignment="Center"
                          Background="{Binding Settings.LayerPreview.CrosshairBrush}"
                          Command="{Binding SelectColor}"
                          CommandParameter="CrosshairColor"/>
                </Grid>
              </StackPanel>


            </Border>

            <!--Zoom-->
            <Border
                Classes="GroupBox"
                Margin="5">

              <StackPanel Orientation="Vertical">
                <TextBlock Padding="10" Background="LightBlue" FontWeight="Bold" Text="Zoom"/>
                <Grid Margin="10" RowDefinitions="Auto" ColumnDefinitions="Auto,250,*,100">
                  <TextBlock Grid.Row="0" Grid.Column="0"
                             VerticalAlignment="Center"
                             Text="Zoom out to fit:"/>

                  <ComboBox Grid.Row="0" Grid.Column="1"
                            Margin="10,0,0,0"
                            VerticalAlignment="Center"
                            SelectedIndex="{Binding Settings.LayerPreview.ZoomToFitPrintVolumeBounds}"
                            HorizontalAlignment="Stretch">
                    <ComboBox.Items>
                      <ComboBoxItem Content="Print Volume Boundary" />
                      <ComboBoxItem Content="Layer Boundary" />
                    </ComboBox.Items>
                  </ComboBox>

                  <TextBlock Grid.Row="0" Grid.Column="2"
                             Margin="10,0,0,0"
                             VerticalAlignment="Center"
                             HorizontalAlignment="Right"
                             Text="Zoom in factor:"
                           />

                  <ComboBox Grid.Row="0" Grid.Column="3"
                            Margin="10,0,0,0"
                            VerticalAlignment="Center"
                            Items="{Binding ZoomRanges}"
                            SelectedIndex="{Binding Settings.LayerPreview.ZoomLockLevelIndex}"
                            HorizontalAlignment="Stretch"
                          />

                </Grid>

                <CheckBox
                  Margin="10,0,10,10"
                  Content="Auto zoom &amp; center issues on selection"
                  IsChecked="{Binding Settings.LayerPreview.ZoomIssues}"
                />
              </StackPanel>

            </Border>

            <!--Crosshairs-->
            <Border
                Classes="GroupBox"
              Margin="5">

              <StackPanel Orientation="Vertical">
                <TextBlock Padding="10" Background="LightBlue" FontWeight="Bold" Text="Crosshairs"/>
                <Grid Margin="10" RowDefinitions="Auto,10,Auto" ColumnDefinitions="Auto,150,*,Auto">
                  <CheckBox Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2"
                             VerticalAlignment="Center"
                             Content="Show crosshairs for selected issues only"
                             IsChecked="{Binding Settings.LayerPreview.CrosshairShowOnlyOnSelectedIssues}"/>
                  <TextBlock Grid.Row="0" Grid.Column="2"
                             HorizontalAlignment="Right"
                             VerticalAlignment="Center"
                             Text="Crosshair size:"/>

                  <NumericUpDown Grid.Row="0" Grid.Column="3"
                                 Classes="ValueLabel ValueLabel_px"
                                 Margin="10,0,0,0"
                                 VerticalAlignment="Center"
                                 Minimum="1"
                                 Maximum="1000000"
                                 Width="70"
                                 Value="{Binding Settings.LayerPreview.CrosshairLength}"/>

                  <TextBlock Grid.Row="2" Grid.Column="0"
                             VerticalAlignment="Center"
                             Text="Crosshair fade after:"/>
                  <ComboBox Grid.Row="2" Grid.Column="1"
                            VerticalAlignment="Center"
                            Margin="10,0,0,0"
                            Items="{Binding ZoomRanges}"
                            SelectedIndex="{Binding Settings.LayerPreview.CrosshairFadeLevelIndex}"/>
                  <TextBlock Grid.Row="2" Grid.Column="2"
                             HorizontalAlignment="Right"
                             VerticalAlignment="Center"
                             Text="Crosshair margin:"/>

                  <NumericUpDown Grid.Row="2" Grid.Column="3"
                                 Classes="ValueLabel ValueLabel_px"
                                 Margin="10,0,0,0"
                                 VerticalAlignment="Center"
                                 Minimum="1"
                                 Maximum="255"
                                 Width="70"
                                 Value="{Binding Settings.LayerPreview.CrosshairMargin}"/>

                </Grid>
              </StackPanel>

            </Border>

            <Border
                Classes="GroupBox"
              Margin="5">

              <StackPanel Orientation="Vertical">
                <TextBlock Padding="10" Background="LightBlue" FontWeight="Bold" Text="Miscellaneous"/>

                <StackPanel Orientation="Horizontal">
                  <CheckBox
                    Margin="10,10"
                    ToolTip.Tip="Auto rotate the layer preview on file load for a landscape viewport."
                    Content="Auto rotate on load"
                    IsChecked="{Binding Settings.LayerPreview.AutoRotateLayerBestView}"/>

                  <CheckBox
                      Margin="0,0,10,0"
                      ToolTip.Tip="Auto flip the layer preview on file load if the file is marked to print mirrored on the printer LCD."
                      Content="Auto flip on load"
                      IsChecked="{Binding Settings.LayerPreview.AutoFlipLayerIfMirrored}"/>

                  <CheckBox
                  Content="Zoom to fit on load"
                  IsChecked="{Binding Settings.LayerPreview.LayerZoomToFitOnLoad}"/>

                </StackPanel>

                <CheckBox
                  Margin="10,0,10,10"
                  Content="Show square grid as background "
                  IsChecked="{Binding Settings.LayerPreview.ShowBackgroudGrid}"
                />

              </StackPanel>
            </Border>


          </StackPanel>
        </ScrollViewer>
      </TabItem>
      <TabItem Header="Issues" VerticalContentAlignment="Center">
          <Grid RowDefinitions="*">
          <ScrollViewer Name="ScrollViewer2">
          <StackPanel Orientation="Vertical">
            <Border
                Classes="GroupBox"
                Margin="5">

              <StackPanel Orientation="Vertical">
                <TextBlock Padding="10" Background="LightBlue" FontWeight="Bold" Text="Startup"/>


                <StackPanel Orientation="Horizontal" Spacing="20">
                <CheckBox Margin="10,10" Content="Compute issues on file load"
                          IsChecked="{Binding Settings.Issues.ComputeIssuesOnLoad}"/>

                <CheckBox Margin="0,10" Content="Auto repair layers and issues on file load"
                          IsEnabled="{Binding Settings.Issues.ComputeIssuesOnLoad}"
                          IsChecked="{Binding Settings.Issues.AutoRepairIssuesOnLoad}"/>
                </StackPanel>

                <CheckBox Margin="10,0,10,0" Content="Auto compute issues when the Issues tab is opened for the first time"
                          IsChecked="{Binding Settings.Issues.ComputeIssuesOnClickTab}"
                          />

                <Grid 
                    RowDefinitions="Auto"
                    ColumnDefinitions="Auto,10,Auto"
                    Margin="10">
                    <TextBlock 
                        Grid.Row="0"
                        Grid.Column="0"
                        Text="Compute:" VerticalAlignment="Center"/>
                    <StackPanel
                        Grid.Row="0"
                        Grid.Column="2"
                        Orientation="Vertical" Spacing="10">

                        <StackPanel
                            Orientation="Horizontal" Spacing="10">
                            <CheckBox Content="Islands"
                                      IsChecked="{Binding Settings.Issues.ComputeIslands}"/>
                            <CheckBox Content="Overhangs"
                                      IsChecked="{Binding Settings.Issues.ComputeOverhangs}"/>
                            <CheckBox Content="Resin traps"
                                      IsChecked="{Binding Settings.Issues.ComputeResinTraps}"/>
                            <CheckBox Content="Suction cups"
                                      IsEnabled="{Binding Settings.Issues.ComputeResinTraps}"
                                      IsChecked="{Binding Settings.Issues.ComputeSuctionCups}"/>
                            <CheckBox Content="Touching boundary"
                                      IsChecked="{Binding Settings.Issues.ComputeTouchingBounds}"/>
                        </StackPanel>

                      <StackPanel Orientation="Horizontal" Spacing="10">
                        <CheckBox Content="Print height"
                                  IsChecked="{Binding Settings.Issues.ComputePrintHeight}"/>

                        <CheckBox Content="Empty layers"
                                  IsChecked="{Binding Settings.Issues.ComputeEmptyLayers}"/>
                      </StackPanel>
                    </StackPanel>
                </Grid>

              </StackPanel>
            </Border>

            <Border
              Classes="GroupBox"
              Margin="5">

              <StackPanel Orientation="Vertical">
                <TextBlock Padding="10" Background="LightBlue" FontWeight="Bold" Text="Issues list"/>

                <Grid
                    RowDefinitions="Auto"
                    ColumnDefinitions="Auto,10,Auto"
                    Margin="10">
                  <TextBlock
                      Grid.Row="0"
                      Grid.Column="0"
                      Text="Group view by:" VerticalAlignment="Center"/>
                  <StackPanel
                      Grid.Row="0"
                      Grid.Column="2"
                      Orientation="Vertical" Spacing="10">

                    <StackPanel
                        Orientation="Horizontal" Spacing="10">
                      <CheckBox Content="Type"
                                IsChecked="{Binding Settings.Issues.DataGridGroupByType}"/>
                      <CheckBox Content="Layer"
                                IsChecked="{Binding Settings.Issues.DataGridGroupByLayerIndex}"/>
                     </StackPanel>
                  </StackPanel>
                </Grid>

              </StackPanel>
            </Border>

            <Border
                Classes="GroupBox"
                Margin="5">

              <StackPanel Orientation="Vertical">
                <TextBlock Padding="10" Background="LightBlue" FontWeight="Bold"
                           ToolTip.Tip="Unsupported pixels"
                           Text="Islands"/>

                <CheckBox Margin="10,10"
                          Content="Enhance island detection with a combined overhang check"
                          IsChecked="{Binding Settings.Issues.IslandEnhancedDetection}"
                          ToolTip.Tip="Combines the island and overhang detections for a better and more realistic detection, also to discard false-positives. (Slower)
&#x0a;If enabled, and when a island is found, it will check for overhangs on that same island, if no overhang found then the island will be discarded and considered safe, otherwise it will flag as an island issue.
&#x0a;Note: Overhangs settings will be used to configure the detection. Enabling Overhangs is not required for this procedure to work."/>
                
                <CheckBox Margin="10,0,10,10"
                          Content="Allow diagonal bonds during island detection"
                          IsChecked="{Binding Settings.Issues.IslandAllowDiagonalBonds}"
                          ToolTip.Tip="If enabled, components touching by even a single diagonal bond will be considered a single component for the purposes of island detection.
&#x0a;Enabling this will result in faster island detection. but some potential islands with weak bonds to other components may not be detected."
                        />


                <StackPanel Orientation="Horizontal" Margin="10,0,10,10" Spacing="10">
                  <NumericUpDown Width="150"
                                 Classes="ValueLabel ValueLabel_sun"
                                 Minimum="0"
                                 Maximum="254"
                                 Value="{Binding Settings.Issues.IslandBinaryThreshold}"
                  />
                  <TextBlock
                    VerticalAlignment="Center"
                    Text="Pixel intensity threshold for island detection"
                    ToolTip.Tip="Pixels below this threshold will be considered black during island detection.
&#x0a;Pixels equal to or above this threshold will be considered white during island detection.
&#x0a;0 to disable."
                  />
                </StackPanel>

                <StackPanel Orientation="Horizontal" Margin="10,0,10,10" Spacing="10">
                  <NumericUpDown Width="150"
                                 Classes="ValueLabel ValueLabel_px2"
                                 Minimum="1"
                                 Maximum="255"
                                 Value="{Binding Settings.Issues.IslandRequiredAreaToProcessCheck}"
                  />
                  <TextBlock
                    VerticalAlignment="Center"
                    Text="Bounding area required for an object to be considered an island"
                    ToolTip.Tip="Objects with bounding area smaller than this value will not be considered an island even if unsupported."
                  />
                </StackPanel>

                <StackPanel Orientation="Horizontal" Margin="10,0,10,10" Spacing="10">
                  <NumericUpDown Width="150"
                                 Classes="ValueLabel ValueLabel_sun"
                                 Minimum="1"
                                 Maximum="255"
                                 Value="{Binding Settings.Issues.IslandRequiredPixelBrightnessToProcessCheck}"
                  />
                  <TextBlock
                    VerticalAlignment="Center"
                    Text="Minimum pixel intensity to consider a pixel part of an island"
                    ToolTip.Tip="Pixels with an intensity below this threshold will not be considerd as part of an island."
                  />
                </StackPanel>

                <StackPanel Orientation="Horizontal" Margin="10,0,10,10" Spacing="10">
                  <NumericUpDown Width="150"
                                 Classes="ValueLabel ValueLabel_times"
                                 Minimum="0.05"
                                 Maximum="0.95"
                                 Increment="0.05"
                                 FormatString="F2"
                                 Value="{Binding Settings.Issues.IslandRequiredPixelsToSupportMultiplier}"
                  />
                  <TextBlock
                    VerticalAlignment="Center"
                    Text="Supporting safe pixels required over a multiplier on island pixels"
                    ToolTip.Tip="An island supported by at least it pixels multiplied by this value will always be considered supported.
&#x0a;Formula: Supporting pixels >= Island pixels * this value"
                  />
                </StackPanel>


                <StackPanel Orientation="Horizontal" Margin="10,0,10,10" Spacing="10">
                  <NumericUpDown Width="150"
                                 Classes="ValueLabel ValueLabel_sun"
                                 Minimum="50"
                                 Maximum="255"
                                 Value="{Binding Settings.Issues.IslandRequiredPixelBrightnessToSupport}"
                  />
                  <TextBlock
                    VerticalAlignment="Center"
                    Text="Minimum intensity of a supporting pixel before it is considered safe"
                    ToolTip.Tip="Pixels below this threshold will not be considered when counting supporting pixels for an island."
                  />
                </StackPanel>

                <!--
              <StackPanel Orientation="Horizontal" Margin="10,0,10,10" Spacing="10">
                <NumericUpDown Width="60"
                
                                Minimum="1"
                                Maximum="255"
                                Value="{Binding Settings.Issues.IslandRequiredPixelsToSupport}"
                                />
                <TextBlock
                  VerticalAlignment="Center" 
                  Text="Supporting safe pixels required to considerer an island supported"
                  ToolTip.Tip="An island supported by at least this number of safe pixels will always be considered supported.
&#x0a;An island supported by less than this number of pixels will only be considered supported if the number of supporting pixels is at least half the area of the island itself."
                  />
              </StackPanel>


              <StackPanel Orientation="Horizontal" Margin="10,0,10,10" Spacing="10">
                <NumericUpDown Width="60"
                
                                Minimum="50"
                                Maximum="255"
                               Value="{Binding Settings.Issues.IslandRequiredPixelBrightnessToSupport}"
                                />
                <TextBlock 
                  VerticalAlignment="Center"
                  Text="Minimum intensity of a supporting pixel before it is considered safe"
                  ToolTip.Tip="Pixels below this threshold will not be considered when counting supporting pixels for an island."
                  />
              </StackPanel>
              -->
              </StackPanel>
            </Border>

            <Border
                Classes="GroupBox"
                Margin="5">

              <StackPanel Orientation="Vertical">
                <TextBlock Padding="10" Background="LightBlue" FontWeight="Bold"
                           ToolTip.Tip="Unsupported pixels that goes beyond a certain angle/threshold"
                           Text="Overhangs"/>

                <CheckBox
                  Margin="10,10"
                  Content="Include islands when detecting overhangs"
                  ToolTip.Tip="If enabled, overhangs will be computed everywhere, including on islands. An overhang on an island will always be detected and reported. (Faster)
&#x0a;If disabled, islands are disregarded when computing overhangs. An overhang that is on an island will never be detected or reported.  (Slower)
&#x0a;When island detection is disabled and overhang detection is enabled, overhangs will always be computed everywhere."
                  IsChecked="{Binding Settings.Issues.OverhangIndependentFromIslands}"/>

                <StackPanel Orientation="Horizontal" Margin="10,0,10,10" Spacing="10">
                  <NumericUpDown Width="150"
                                 Classes="ValueLabel ValueLabel_px"
                                 Minimum="2"
                                 Maximum="255"
                                 Value="{Binding Settings.Issues.OverhangErodeIterations}"
                  />
                  <TextBlock
                    VerticalAlignment="Center"
                    Text="Minimum overhang depth"
                    ToolTip.Tip="The number of pixels that an overhang can protrude from the previous layer before it is detected and reported as an overhang."
                  />
                </StackPanel>

              </StackPanel>
            </Border>

            <Border
                Classes="GroupBox"
                Margin="5">

              <StackPanel Orientation="Vertical">
                <TextBlock Padding="10" Background="LightBlue" FontWeight="Bold"
                           ToolTip.Tip="Trapped resin inside hollow objects"
                           Text="Resin traps"/>

                <StackPanel Orientation="Horizontal" Margin="10" Spacing="10">
                  <NumericUpDown Width="150"
                                 Classes="ValueLabel ValueLabel_sun"
                                 Minimum="0"
                                 Maximum="254"
                                 Value="{Binding Settings.Issues.ResinTrapBinaryThreshold}"/>
                  <TextBlock
                    VerticalAlignment="Center"
                    Text="Pixel intensity threshold for resin trap detection"
                    ToolTip.Tip="Pixels below this threshold will be considered black during resin trap detection.
&#x0a;Pixels equal to or above this theshold will be considred white during resin trap detection.
&#x0a;0 to disable."
                  />

                </StackPanel>

                <StackPanel Orientation="Horizontal" Margin="10,0,10,10" Spacing="10">
                  <NumericUpDown Width="150"
                                 Classes="ValueLabel ValueLabel_px2"
                                 Minimum="1"
                                 Maximum="255"
                                 Value="{Binding Settings.Issues.ResinTrapRequiredAreaToProcessCheck}"/>
                  <TextBlock
                    VerticalAlignment="Center"
                    Text="Bounding area required for an object to be processed during resin trap detection"
                    ToolTip.Tip="Objects with bounding area smaller than this value will not be processed during resin trip detection."/>
                </StackPanel>

                <StackPanel Orientation="Horizontal" Margin="10,0,10,10" Spacing="10">
                  <NumericUpDown Width="150"
                                 Classes="ValueLabel ValueLabel_px"
                                 Minimum="1"
                                 Maximum="255"
                                 Value="{Binding Settings.Issues.ResinTrapRequiredBlackPixelsToDrain}"
                  />
                  <TextBlock
                    VerticalAlignment="Center"
                    Text="Number of drain pixels required to disqualify a potential resin trap"
                    ToolTip.Tip="The drain pixel area required to consider a potential resin trap sufficiently drained (no longer a resin trap)."
                  />
                </StackPanel>

                <StackPanel Orientation="Horizontal" Margin="10,0,10,10" Spacing="10">
                  <NumericUpDown Width="150"
                                 Classes="ValueLabel ValueLabel_sun"
                                 Minimum="1"
                                 Maximum="150"
                                 Value="{Binding Settings.Issues.ResinTrapMaximumPixelBrightnessToDrain}"
                  />
                  <TextBlock
                    VerticalAlignment="Center"
                    Text="Maximum pixel intensity for a pixel to be considered a drain pixel"
                    ToolTip.Tip="Pixels below this intensity threshold will not be counted when evaluating if a potential resin trap is sufficiently drained."
                  />
                </StackPanel>
              </StackPanel>
            </Border>

              <Border
                  Classes="GroupBox"
                  Margin="5">

                  <StackPanel Orientation="Vertical">
                      <TextBlock Padding="10" Background="LightBlue" FontWeight="Bold"
                                 ToolTip.Tip="Hollow areas that aren't resin traps but lacks a venting hole at that level to prevent suction and pressure"
                                 Text="Suction cups"/>

                      <StackPanel Orientation="Horizontal" Margin="10" Spacing="10">
                          <NumericUpDown Width="150"
                                         Classes="ValueLabel ValueLabel_px2"
                                         Minimum="1"
                                         Maximum="4294967295"
                                         Value="{Binding Settings.Issues.SuctionCupRequiredAreaToConsider}"/>
                        <TextBlock
                            VerticalAlignment="Center"
                            Text="Bounding area required for an object to be processed during suction cup detection"
                            ToolTip.Tip="Objects with bounding area smaller than this value will not be processed during suction cup detection."/>
                      </StackPanel>
					  <StackPanel Orientation="Horizontal" Margin="10" Spacing="10">
						  <NumericUpDown Width="150" 
                            Classes="ValueLabel ValueLabel_mm"
										 Minimum="0.05" 
										 Maximum="4294967295" 
										 Increment="0.05" 
                            FormatString="F2"
										 Value="{Binding Settings.Issues.SuctionCupRequiredHeightToConsider}"
                                />
						  <TextBlock
							  VerticalAlignment="Center"
							  Text="Minimum height required for a suction cup detection to be reported"
							  ToolTip.Tip="Objects with a smaller height than this value will not be reported during suction cup detection."/>
					  </StackPanel>
                    </StackPanel>
                </Border>

            <Border
                Classes="GroupBox"
                Margin="5">

              <StackPanel Orientation="Vertical">
                <TextBlock Padding="10" Background="LightBlue" FontWeight="Bold" 
                           ToolTip.Tip="White pixels that nearly or touch the build plate edges"
                           Text="Touching boundary"/>

                <StackPanel Orientation="Horizontal" Margin="10" Spacing="10">
                  <NumericUpDown Width="150"
                                 Classes="ValueLabel ValueLabel_sun"
                                  Minimum="1"
                                  Maximum="255"
                                  Value="{Binding Settings.Issues.TouchingBoundMinimumPixelBrightness}"
                                />
                  <TextBlock
                    VerticalAlignment="Center"
                    Text="Minimum pixel intensity for a pixel to be considered a touching boundary"
                    ToolTip.Tip="Pixels below this values won't flag a issue when inside the dangerous boundary margin.
&#x0a;Pixels equal or above this values will flag a issue when inside the dangerous boundary margin."
                  />
                </StackPanel>


                <Grid
                  ColumnDefinitions="Auto,Auto,Auto,Auto,Auto"
                  RowDefinitions="Auto,Auto,Auto,Auto,Auto"
                  Margin="10,0,10,10"
                  >
                  <TextBlock
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    Grid.Row="1"
                    Grid.Column="1"
                    FontWeight="Bold"
                    Text="Margin" />

                  <TextBlock
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    Grid.Row="3"
                    Grid.Column="1"
                    FontWeight="Bold"
                    Text="Margin" />

                  <TextBlock
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    Grid.Row="1"
                    Grid.Column="3"
                    FontWeight="Bold"
                    Text="Margin" />

                  <TextBlock
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    Grid.Row="3"
                    Grid.Column="3"
                    FontWeight="Bold"
                    Text="Margin" />
                  
                  <TextBlock
                    Grid.Column="0"
                    Grid.Row="2"
                    VerticalAlignment="Center"
                    Text="Left " />
                  <NumericUpDown Grid.Column="1" Grid.Row="2"
                                 Width="150"
                                 Classes="ValueLabel ValueLabel_px"
                                 Minimum="1"
                                 Maximum="255"
                                 Margin="0,0,5,0"
                    
                                 Value="{Binding Settings.Issues.TouchingBoundMarginLeft}" />

                 
                  <TextBlock
                    Grid.Column="2"
                    Grid.Row="0"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    Margin="0,0,0,2"
                    Text="Top" />
                  <NumericUpDown Grid.Column="2"  Grid.Row="1"
                                 Width="150"
                                 Classes="ValueLabel ValueLabel_px"
                                 Minimum="1"
                                 Maximum="255"
                                 Margin="0,0,0,5"
                    
                                 Value="{Binding Settings.Issues.TouchingBoundMarginTop}" />

                  <TextBlock
                    Grid.Column="4"
                    Grid.Row="2"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    Text=" Right" />
                  <NumericUpDown Grid.Column="3" Grid.Row="2"
                                 Width="150"
                                 Classes="ValueLabel ValueLabel_px"
                                 Minimum="1"
                                 Maximum="255"
                                 Margin="5,0,0,0"
                    
                                 Value="{Binding Settings.Issues.TouchingBoundMarginRight}" />

                  <TextBlock
                    Grid.Column="2"
                    Grid.Row="4"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    Margin="0,2,0,0"
                    Text="Bottom" />
                  <NumericUpDown Grid.Column="2" Grid.Row="3"
                                 Width="150"
                                 Classes="ValueLabel ValueLabel_px"
                                 Minimum="1"
                                 Maximum="255"
                                 Margin="0,5,0,0"
                    
                                 Value="{Binding Settings.Issues.TouchingBoundMarginBottom}" />

                  <CheckBox
                    Grid.Row="2"
                    Grid.Column="2"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    IsChecked="{Binding Settings.Issues.TouchingBoundSyncMargins}"
                    Content="Sync"/>
                </Grid>

              </StackPanel>
            </Border>

              <Border
                  Classes="GroupBox"
                  Margin="5">

                  <StackPanel Orientation="Vertical">
                      <TextBlock Padding="10" Background="LightBlue" FontWeight="Bold"
                                 ToolTip.Tip="Layers that surpass printer maximum height"
                                 Text="Print height"/>

                      <StackPanel Orientation="Horizontal" Margin="10" Spacing="10">
                          <NumericUpDown Width="150"
                                         Classes="ValueLabel ValueLabel_mm"
                                         Minimum="-50"
                                         Maximum="50"
                                         Increment="0.1"
                                         FormatString="F2"
                                         Value="{Binding Settings.Issues.PrintHeightOffset}"/>
                          <TextBlock
                              VerticalAlignment="Center"
                              Text="Offset height from printer maximum Z height"
                              ToolTip.Tip="Layers height will be compared with printer maximum possible height + this offset, if a layer surpass this height, it will be marked as a issue.
&#x0a;Use negative values if you want to give some down margin from top most.
&#x0a;Note: Some file formats lacks of printer maximum height information, and in this cases the object final height will be used instead as printer maximum, in this cases use a Offset of 0 to not have false detected issues."/>
                      </StackPanel>
                    </StackPanel>
                </Border>

          </StackPanel>
        </ScrollViewer>
              </Grid>
      </TabItem>

      <TabItem Header="Pixel editor" VerticalContentAlignment="Center">
        <ScrollViewer Name="ScrollViewer3">
          <StackPanel Orientation="Vertical">
            <Border
                Classes="GroupBox"
                  Margin="5">

              <StackPanel Orientation="Vertical">
                <TextBlock Padding="10" Background="LightBlue" FontWeight="Bold" Text="Colors &amp; highlights"/>

                <Grid Margin="10" RowDefinitions="Auto,10,Auto,10,Auto,10,Auto,10,Auto" ColumnDefinitions="Auto,Auto,Auto">
                  <TextBlock Grid.Row="0" Grid.Column="0"
                    VerticalAlignment="Center"
                    Text="Pixel add operation / (Selected):"/>

                  <Button Grid.Row="0" Grid.Column="1"
                          Margin="10,0,0,0" Padding="10"
                          BorderBrush="Black"
                          BorderThickness="2"
                          Background="{Binding Settings.PixelEditor.AddPixelBrush}"
                          Command="{Binding SelectColor}"
                          CommandParameter="AddPixelColor"
                        />
                  <Button Grid.Row="0" Grid.Column="2"
                          Margin="10,0,0,0" Padding="10"
                          BorderBrush="Black"
                          BorderThickness="2"
                          Background="{Binding Settings.PixelEditor.AddPixelHighlightBrush}"
                          Command="{Binding SelectColor}"
                          CommandParameter="AddPixelHighlightColor"
                        />


                  <TextBlock Grid.Row="2" Grid.Column="0"
                    VerticalAlignment="Center"
                    Text="Pixel remove operation / (Selected):"/>

                  <Button Grid.Row="2" Grid.Column="1"
                          Margin="10,0,0,0" Padding="10"
                          BorderBrush="Black"
                          BorderThickness="2"
                          Background="{Binding Settings.PixelEditor.RemovePixelBrush}"
                          Command="{Binding SelectColor}"
                          CommandParameter="RemovePixelColor"
                        />
                  <Button Grid.Row="2" Grid.Column="2"
                          Margin="10,0,0,0" Padding="10"
                          BorderBrush="Black"
                          BorderThickness="2"
                          Background="{Binding Settings.PixelEditor.RemovePixelHighlightBrush}"
                          Command="{Binding SelectColor}"
                          CommandParameter="RemovePixelHighlightColor"
                        />

                  <TextBlock Grid.Row="4" Grid.Column="0"
                    VerticalAlignment="Center"
                    Text="Support operation / (Selected):"/>

                  <Button Grid.Row="4" Grid.Column="1"
                          Margin="10,0,0,0" Padding="10"
                          BorderBrush="Black"
                          BorderThickness="2"
                          Background="{Binding Settings.PixelEditor.SupportsBrush}"
                          Command="{Binding SelectColor}"
                          CommandParameter="SupportsColor"
                        />
                  <Button Grid.Row="4" Grid.Column="2"
                          Margin="10,0,0,0" Padding="10"
                          BorderBrush="Black"
                          BorderThickness="2"
                          Background="{Binding Settings.PixelEditor.SupportsHighlightBrush}"
                          Command="{Binding SelectColor}"
                          CommandParameter="SupportsHighlightColor"
                        />

                  <TextBlock Grid.Row="6" Grid.Column="0"
                    VerticalAlignment="Center"
                    Text="Drain hole operation / (Selected):"/>

                  <Button Grid.Row="6" Grid.Column="1"
                          Margin="10,0,0,0" Padding="10"
                          BorderBrush="Black"
                          BorderThickness="2"
                          Background="{Binding Settings.PixelEditor.DrainHoleBrush}"
                          Command="{Binding SelectColor}"
                          CommandParameter="DrainHoleColor"
                        />
                  <Button Grid.Row="6" Grid.Column="2"
                          Margin="10,0,0,0" Padding="10"
                          BorderBrush="Black"
                          BorderThickness="2"
                          Background="{Binding Settings.PixelEditor.DrainHoleHighlightBrush}"
                          Command="{Binding SelectColor}"
                          CommandParameter="DrainHoleHighlightColor"
                        />

                  <TextBlock Grid.Row="8" Grid.Column="0"
                    VerticalAlignment="Center"
                    Text="Drawing cursor:"/>

                  <Button Grid.Row="8" Grid.Column="1"
                          Margin="10,0,0,0" Padding="10"
                          BorderBrush="Black"
                          BorderThickness="2"
                          Background="{Binding Settings.PixelEditor.CursorBrush}"
                          Command="{Binding SelectColor}"
                          CommandParameter="CursorColor"
                        />
                </Grid>

              </StackPanel>
            </Border>

            <Border
                Classes="GroupBox"
                  Margin="5">

              <StackPanel Orientation="Vertical">
                <TextBlock Padding="10" Background="LightBlue" FontWeight="Bold" Text="Actions"/>

                <CheckBox
                  IsChecked="{Binding Settings.PixelEditor.PartialUpdateIslandsOnEditing}"
                  Margin="10"
                  Content="Refresh issues for modified layers"/>
                <CheckBox
                  IsChecked="{Binding Settings.PixelEditor.CloseEditorOnApply}"
                  Margin="10,0,10,10"
                  Content="Close pixel editor after operations are applied"/>
              </StackPanel>
            </Border>

          </StackPanel>
        </ScrollViewer>
      </TabItem>

      <TabItem Header="Layer repair" VerticalContentAlignment="Center">
        <ScrollViewer Name="ScrollViewer4">
          <StackPanel Orientation="Vertical">
            <Border
                Classes="GroupBox"
                  Margin="5">

              <StackPanel Orientation="Vertical" Spacing="10">
                <TextBlock Padding="10" Background="LightBlue" FontWeight="Bold" Text="Default values"/>

                <CheckBox IsChecked="{Binding Settings.LayerRepair.RepairIslands}"
                          Margin="10,0" Content="Attempt to repair islands by default"/>
                <CheckBox IsChecked="{Binding Settings.LayerRepair.RepairResinTraps}"
                          Margin="10,0" Content="Attempt to repair resin traps by default"/>
                <CheckBox IsChecked="{Binding Settings.LayerRepair.RepairSuctionCups}"
                          Margin="10,0" Content="Attempt to repair suction cups by default"/>
                <CheckBox IsChecked="{Binding Settings.LayerRepair.RemoveEmptyLayers}"
                          Margin="10,0" Content="Remove empty layers by default"/>

                <StackPanel Orientation="Horizontal" Margin="10,0" Spacing="10">
                  <NumericUpDown
                    Value="{Binding Settings.LayerRepair.RemoveIslandsBelowEqualPixels}"
                    Width="150"
                    Classes="ValueLabel ValueLabel_px2"
                    Minimum="0"
                    Maximum="255"/>
                  <TextBlock VerticalAlignment="Center" Text="Islands: Maximum pixel area for Island removal (0 = disable)"/>
                </StackPanel>

                <StackPanel Orientation="Horizontal" Margin="10,0" Spacing="10">
                  <NumericUpDown
                    Value="{Binding Settings.LayerRepair.RemoveIslandsRecursiveIterations}"
                    Width="150"
                    Classes="ValueLabel ValueLabel_layers"
                    Minimum="0"
                    Maximum="65535"/>
                  <TextBlock VerticalAlignment="Center" Text="Islands: Maximum layers for recursive island removal (0 = All)"/>
                </StackPanel>

                <StackPanel Orientation="Horizontal" Margin="10,0" Spacing="10">
                    <NumericUpDown
                        Value="{Binding Settings.LayerRepair.AttachIslandsBelowLayers}"
                        Width="150"
                        Classes="ValueLabel ValueLabel_layers"
                        Minimum="0"
                        Maximum="65535"/>
                    <TextBlock VerticalAlignment="Center" Text="Islands: Attempt to attach islands down to this layers (0 = Disabled)"/>
                </StackPanel>

                <StackPanel Orientation="Horizontal" Margin="10,0" Spacing="10">
                    <NumericUpDown
                        Value="{Binding Settings.LayerRepair.ResinTrapsOverlapBy}"
                        Width="150"
                        Classes="ValueLabel ValueLabel_px"
                        Minimum="0"
                        Maximum="255"/>
                    <TextBlock VerticalAlignment="Center" Text="Resin traps: Overlap and expand resin trap area by this value in pixels (0 = Disabled)"/>
                </StackPanel>

                <StackPanel Orientation="Horizontal" Margin="10,0" Spacing="10">
                    <NumericUpDown
                        Value="{Binding Settings.LayerRepair.SuctionCupsVentHole}"
                        Width="150"
                        Classes="ValueLabel ValueLabel_px2"
                        Minimum="4"
                        Maximum="255"/>
                    <TextBlock VerticalAlignment="Center" Text="Suction cups: Hole diameter to drill the layers with"/>
                </StackPanel>

                <StackPanel Orientation="Horizontal" Margin="10,0" Spacing="10">
                  <NumericUpDown
                    Value="{Binding Settings.LayerRepair.ClosingIterations}"
                    Width="150"
                    Classes="ValueLabel ValueLabel_px"
                    Minimum="0"
                    Maximum="255"/>
                  <TextBlock VerticalAlignment="Center" Text="'Gap Closing' iterations"/>
                </StackPanel>

                <StackPanel Orientation="Horizontal" Margin="10,0,10,10" Spacing="10">
                  <NumericUpDown
                    Value="{Binding Settings.LayerRepair.OpeningIterations}"
                    Width="150"
                    Classes="ValueLabel ValueLabel_px"
                    Minimum="0"
                    Maximum="255"/>
                  <TextBlock VerticalAlignment="Center" Text="'Noise Removal' iterations"/>
                </StackPanel>

              </StackPanel>
            </Border>

          </StackPanel>
        </ScrollViewer>
      </TabItem>

      <TabItem Header="Tools" VerticalContentAlignment="Center">
        <ScrollViewer Name="ScrollViewer5">
          <StackPanel Orientation="Vertical" Spacing="5">
            <Border
                Classes="GroupBox"
              Margin="5">

              <StackPanel Orientation="Vertical">
                <TextBlock Padding="10" Background="LightBlue" FontWeight="Bold" Text="Common"/>
                <StackPanel Margin="10" Orientation="Vertical" Spacing="10">
                  <CheckBox IsChecked="{Binding Settings.Tools.RestoreLastUsedSettings}" 
                            Content="Keep and restore the last used settings on operations per user session/instance"/>

                  <ToggleSwitch IsChecked="{Binding Settings.Tools.LastUsedSettingsKeepOnCloseFile}"
                        OffContent="Discard the session when closing or loading files"
                        OnContent="Keep the session when closing or loading files"/>

                  <ToggleSwitch IsChecked="{Binding Settings.Tools.LastUsedSettingsPriorityOverDefaultProfile}"
                                IsEnabled="{Binding Settings.Tools.RestoreLastUsedSettings}"
                                OffContent="Default profile will priority over the session"
                                OnContent="Session will priority over the default profile"/>
                </StackPanel>

              </StackPanel>
            </Border>

          </StackPanel>
        </ScrollViewer>
      </TabItem>

      <TabItem Header="Automations" VerticalContentAlignment="Center">
        <ScrollViewer Name="ScrollViewer6">
          <StackPanel Orientation="Vertical" Spacing="5">
            <Border
                Classes="GroupBox"
              Margin="5">

              <StackPanel Orientation="Vertical">
                <TextBlock Padding="10" Background="LightBlue" FontWeight="Bold" Text="Common"/>
                <StackPanel Margin="10" Orientation="Vertical" Spacing="10">
                  <CheckBox IsChecked="{Binding Settings.Automations.SaveFileAfterModifications}" Content="Auto save the file after apply any automation(s)"/>
                </StackPanel>

              </StackPanel>
            </Border>

            <Border
                Margin="5"
                BorderBrush="LightBlue"
                BorderThickness="4"
              >

              <StackPanel Orientation="Vertical">
                <TextBlock Padding="10" Background="LightBlue" FontWeight="Bold" Text="File convertion"/>
                <StackPanel Margin="10" Orientation="Vertical" Spacing="10">
                  <CheckBox IsChecked="{Binding Settings.Automations.AutoConvertFiles}"
                            ToolTip.Tip="1) Converts the SL1 files to the format specified on 'PrusaSlicer - Printer - Notes' on 'FILEFORMAT_XXX' variable.
&#x0a;2) Converts the VDT files to the format specified on 'Voxeldance Tango - Printer settings - Notes' on 'FILEFORMAT_XXX' variable.
&#x0a;A new file with same name but a new extension will be created and overwrite any previous file.
&#x0a;After a successful conversion the new file will automatically load in instead of the loaded SL1 file."
                            Content="Auto convert SL1 and VDT files to the target format when possible and load it back"/>
                </StackPanel>

              </StackPanel>
            </Border>


            <Border
                Classes="GroupBox"
                  Margin="5">

                  <StackPanel Orientation="Vertical">
                      <TextBlock Padding="10" Background="LightBlue" FontWeight="Bold" Text="Light-off delay"/>

                    <ComboBox 
                              Margin="10"
                              HorizontalAlignment="Stretch"
                              Items="{Binding Settings.Automations.LightOffDelaySetMode, Converter={StaticResource EnumToCollectionConverter}, Mode=OneTime}"
                              SelectedItem="{Binding Settings.Automations.LightOffDelaySetMode, Converter={StaticResource FromValueDescriptionToEnumConverter}}"/>

                      <CheckBox Margin="10,0,10,10"
                                Content="Change only light-off delay if value is zero"
                                ToolTip.Tip="If enabled, it will only change light-off delay to the defined values if the original value is zero.
&#x0a;If disabled, it will always change the light-off delay to the defined values."
                                IsVisible="{Binding Settings.Automations.ChangeOnlyLightOffDelayIfZeroVisible}"
                                IsChecked="{Binding Settings.Automations.ChangeOnlyLightOffDelayIfZero}"/>

                      <Grid Margin="10,0,10,10"
                            IsVisible="{Binding Settings.Automations.LightOffDelayExtraTimeVisible}"
                            RowDefinitions="Auto"
                            ColumnDefinitions="Auto,10,Auto,30,Auto,10,Auto">
                            
                            <TextBlock Grid.Row="0" Grid.Column="0" 
                                       VerticalAlignment="Center"
                                       ToolTip.Tip="Auto set the extra 'light-off delay' based on lift height and speed."
                                       Text="Light-off delay:" />

                            <NumericUpDown Grid.Row="0" Grid.Column="2"
                                           Classes="ValueLabel ValueLabel_s"
                                           Minimum="0"
                                           Maximum="255"
                                           Increment="0.5"
                                           FormatString="F2"
                                           Value="{Binding Settings.Automations.LightOffDelay}"/>

                            <TextBlock Grid.Row="0" Grid.Column="4"
                                       VerticalAlignment="Center"
                                       ToolTip.Tip="Auto set the extra 'bottom light-off delay' based on bottom lift height and speed."
                                       Text="Bottom light-off delay:" />
                            <NumericUpDown Grid.Row="0" Grid.Column="6"
                                           Classes="ValueLabel ValueLabel_s"
                                           Minimum="0"
                                           Maximum="255"
                                           Increment="0.5"
                                           FormatString="F2"
                                           Value="{Binding Settings.Automations.BottomLightOffDelay}"/>

                      </Grid>

                  </StackPanel>
              </Border>




            </StackPanel>
            </ScrollViewer>
          </TabItem>


      <TabItem Header="Network" VerticalContentAlignment="Center">
        <ScrollViewer Name="ScrollViewer7">
          <StackPanel Orientation="Vertical" Spacing="5">
            <Border
                Classes="GroupBox"
              Margin="5">

              <StackPanel Orientation="Vertical">
                <TextBlock Padding="10" Background="LightBlue" FontWeight="Bold" Text="Remote printers"/>
                <StackPanel Margin="10" Orientation="Vertical" Spacing="10">

                    <Grid RowDefinitions="Auto" ColumnDefinitions="*,2,Auto">
                        <ComboBox Grid.Column="0"
                            Name="NetworkRemotePrinterComboBox"
                            HorizontalAlignment="Stretch"
                            Items="{Binding Settings.Network.RemotePrinters}"/>

                        <StackPanel Grid.Column="2" Orientation="Horizontal" Spacing="2">
                            <Button
                                VerticalAlignment="Stretch"
                                Command="{Binding AddNetworkRemotePrinter}">
                                <Image Source="/Assets/Icons/plus-16x16.png"/>
                            </Button>
                          <Button
                              VerticalAlignment="Stretch"
                                IsEnabled="{Binding #NetworkRemotePrinterComboBox.SelectedItem, Converter={x:Static ObjectConverters.IsNotNull}}"
                                Command="{Binding DuplicateSelectedNetworkRemotePrinter}">
                                <Image Source="/Assets/Icons/copy-16x16.png"/>
                            </Button>
                          <Button
                              VerticalAlignment="Stretch"
                                IsEnabled="{Binding #NetworkRemotePrinterComboBox.SelectedItem, Converter={x:Static ObjectConverters.IsNotNull}}"
                                Command="{Binding RemoveSelectedNetworkRemotePrinter}">
                                <Image Source="/Assets/Icons/trash-16x16.png"/>
                            </Button>
                        </StackPanel>

                      </Grid>


                    <Grid RowDefinitions="Auto,10,Auto,10,Auto,10,Auto"
                        ColumnDefinitions="Auto,10,200,30,Auto,10,150"
                        IsVisible="{Binding #NetworkRemotePrinterComboBox.SelectedItem, Converter={x:Static ObjectConverters.IsNotNull}}">

                    <TextBlock Grid.Row="0" Grid.Column="0"
                                 VerticalAlignment="Center"
                                 Text="Status:"/>

                    <ToggleSwitch Grid.Row="0" Grid.Column="2"
                                    VerticalAlignment="Center"
                                    OnContent="Enabled"
                                    OffContent="Disabled"
                                    IsChecked="{Binding #NetworkRemotePrinterComboBox.SelectedItem.IsEnabled}" />

                      <TextBlock Grid.Row="2" Grid.Column="0"
                                 VerticalAlignment="Center"
                                 Text="Name:"/>

                      <TextBox Grid.Row="2" Grid.Column="2" Grid.ColumnSpan="5"
                               HorizontalAlignment="Stretch"
                               VerticalAlignment="Center"
                               Text="{Binding #NetworkRemotePrinterComboBox.SelectedItem.Name}"/>
                    
                    <TextBlock Grid.Row="4" Grid.Column="0"
                               VerticalAlignment="Center"
                               Text="Host:"/>

                      <TextBox Grid.Row="4" Grid.Column="2"
                               HorizontalAlignment="Stretch"
                               VerticalAlignment="Center"
                               Text="{Binding #NetworkRemotePrinterComboBox.SelectedItem.Host}"/>

                      <TextBlock Grid.Row="4" Grid.Column="4"
                                 VerticalAlignment="Center"
                                 ToolTip.Tip="Use 0 if not used"
                                 Text="Port:"/>

                      <NumericUpDown  Grid.Row="4" Grid.Column="6"
                                      Minimum="0"
                                      Maximum="65535"
                                      Increment="1"
                                      Value="{Binding #NetworkRemotePrinterComboBox.SelectedItem.Port}"/>

                    <TextBlock Grid.Row="6" Grid.Column="0"
                               VerticalAlignment="Center"
                               ToolTip.Tip="Valid extensions for this device.
&#x0a;Example: ctb;zip
&#x0a;Empty to be compatible with every file format."
                               Text="Extensions:"/>

                    <TextBox Grid.Row="6" Grid.Column="2" Grid.ColumnSpan="5"
                             HorizontalAlignment="Stretch"
                             VerticalAlignment="Center"
                             Text="{Binding #NetworkRemotePrinterComboBox.SelectedItem.CompatibleExtensions}"/>
                  </Grid>

                  <DataGrid
                      Name="NetworkRemotePrintersGrid"
                      CanUserReorderColumns="True"
                      CanUserResizeColumns="True"
                      CanUserSortColumns="True"
                      GridLinesVisibility="Horizontal"
                      IsReadOnly="False"
                      SelectionMode="Extended"
                      ClipboardCopyMode="IncludeHeader"
                      Items="{Binding #NetworkRemotePrinterComboBox.SelectedItem.Requests}">
                      <DataGrid.Columns>
                          <DataGridTextColumn  Header="Type"
                                               Binding="{Binding Type}"
                                               IsReadOnly="True"
                                               Width="Auto" />
                          <DataGridTemplateColumn  Header="Method"
                                               IsReadOnly="False"
                                               Width="100">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <ComboBox 
                                        HorizontalAlignment="Stretch"
                                        Items="{Binding Method, Converter={StaticResource EnumToCollectionConverter}, Mode=OneTime}"
                                        SelectedItem="{Binding Method, Converter={StaticResource FromValueDescriptionToEnumConverter}}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                          </DataGridTemplateColumn>
                          <DataGridTextColumn Header="Request path"
                                              Binding="{Binding Path}"
                                              IsReadOnly="False"
                                              Width="*" />
                      </DataGrid.Columns>

                  </DataGrid>

                </StackPanel>

              </StackPanel>
            </Border>

          </StackPanel>
        </ScrollViewer>
      </TabItem>



    </TabControl>

      <Border Grid.Row="1" Classes="FooterActions">
          <Grid RowDefinitions="Auto"
              ColumnDefinitions="*,*">

              <StackPanel Grid.Column="0" Orientation="Horizontal">
                  <Button Name="Actions.ResetAllSettings" Padding="10"
                          Command="{Binding OnClickResetAllDefaults}">
                      <StackPanel Orientation="Horizontal">
                          <Image Source="/Assets/Icons/undo-alt-16x16.png"/>
                          <TextBlock Margin="10,0,0,0">Reset all settings</TextBlock>
                      </StackPanel>
                  </Button>
              </StackPanel>

              <StackPanel Grid.Column="1"
                          HorizontalAlignment="Right"
                          VerticalAlignment="Center"
                          Orientation="Horizontal">
                  <Button Name="Actions.Save" Margin="0,0,10,0" Padding="10" IsDefault="True"
                          Command="{Binding OnClickSave}">
                      <StackPanel Orientation="Horizontal">
                          <Image Source="/Assets/Icons/save-16x16.png"/>
                          <TextBlock Margin="10,0,0,0">Save</TextBlock>
                      </StackPanel>
                  </Button>

                  <Button Name="Actions.Cancel" Padding="10" IsCancel="True"
                          Command="{Binding Close}">
                      <StackPanel Orientation="Horizontal">
                          <Image Source="/Assets/Icons/exit-16x16.png"/>
                          <TextBlock Margin="10,0,0,0">Cancel</TextBlock>
                      </StackPanel>
                  </Button>
              </StackPanel>
          </Grid>
      </Border>

    </Grid>

  </controls:WindowEx>
